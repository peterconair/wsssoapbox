<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
			xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			xmlns:p="http://www.springframework.org/schema/p" 
                        xmlns:util="http://www.springframework.org/schema/util"
                        xmlns:sws="http://www.springframework.org/schema/web-services"
    			xmlns:oxm="http://www.springframework.org/schema/oxm"
       			xsi:schemaLocation="
                                http://www.springframework.org/schema/beans 
       				http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       	 			http://www.springframework.org/schema/web-services
       				http://www.springframework.org/schema/web-services/web-services-2.0.xsd
       				http://www.springframework.org/schema/oxm 
       				http://www.springframework.org/schema/oxm/spring-oxm-1.5.xsd
                                http://www.springframework.org/schema/util
                                http://www.springframework.org/schema/util/spring-util-2.0.xsd">

    <description>
        This web application context contains Spring-WS beans. The beans defined in this context are automatically
        detected by Spring-WS, similar to the way Controllers are picked up in Spring Web MVC.
    </description>
    
	<!--
		"You can wire up a MessageDispatcher in a standard, Spring-Web MVC DispatcherServlet. 
		By default, the DispatcherServlet can only delegate to Controllers, but we can instruct it 
		to delegate to a MessageDispatcher by adding a WebServiceMessageReceiverHandlerAdapter
		to the servlet's web application context."
		
		"Note that by explicitly adding the WebServiceMessageReceiverHandlerAdapter, the dispatcher
		servlet does not load the default adapters, and is unable to handle standard Spring-MVC Controllers. 
		Therefore, we add the SimpleControllerHandlerAdapter at the end"
		 
		- See Spring WS 2.0 Reference 5.3.2 
		
		Other references:
		- Combining MessageDispatcher and DispatcherServlet at
		http://forum.springsource.org/showthread.php?t=46997
		- Spring WS 2.0 Reference
		http://static.springsource.org/spring-ws/sites/2.0/reference/html/
		http://static.springsource.org/spring-ws/sites/2.0/apidocs/index.html
	-->
	
	<!-- SAAJ-specific implementation of the WebServiceMessageFactory. Wraps a SAAJ MessageFactory. 
	This factory will use SAAJ 1.3 when found, or fall back to SAAJ 1.2 or even 1.1. -->
    <bean id="messageFactory" class="org.springframework.ws.soap.saaj.SaajSoapMessageFactory">
    <!--
    <property name="soapVersion">
            <util:constant static-field="org.springframework.ws.soap.SoapVersion.SOAP_12"/>
        </property>
        -->
    </bean>
	
	<!-- Requires a message factory so we declare one -->
    <bean class="org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter"
			p:messageFactory-ref="messageFactory"/>
			
	<!--  See reference at the beginning of this document -->
    <bean class="org.springframework.ws.transport.http.WsdlDefinitionHandlerAdapter"/>
	
	<!--  This is responsible for forwarding web service request to the correct adapters.
	This is exactly similar to Spring MVC's DispatcherServlet -->
    <bean id="messageDispatcher" class="org.springframework.ws.server.MessageDispatcher">
        <property name="endpointAdapters">
            <list>
                <ref bean="defaultMethodEndpointAdapter"/>
            </list>	
        </property>
    </bean>
	 
	 <!--  See reference at the beginning of this document -->
    <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="mappings">
            <value>
				/ws=messageDispatcher
				/ws/payment.wsdl=payment
            </value>
        </property> 
    </bean>
    
    <!--  See reference at the beginning of this document -->
    <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"/>
   
</beans>